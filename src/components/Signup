import React, { useState } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';

const SignInSignUp = () => {
  const [isNewCustomer, setIsNewCustomer] = useState(true);
  const [registerData, setRegisterData] = useState({
    client_email: '',
    client_name: '',
    client_pass: '',
    client_country: 'United States#1',
    client_phone: ''
  });
  
  const [loginData, setLoginData] = useState({
    client_email: '',
    client_pass: ''
  });

  const [error, setError] = useState('');

  const handleRegisterChange = (e) => {
    setRegisterData({
      ...registerData,
      [e.target.name]: e.target.value
    });
  };

  const handleLoginChange = (e) => {
    setLoginData({
      ...loginData,
      [e.target.name]: e.target.value
    });
  };

  const handleRegisterSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await fetch('https://academianerds.com/order/client/register', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(registerData)
      });

      if (response.ok) {
        // Handle successful registration
        alert("Registration successful! Please log in.");
        setIsNewCustomer(false);
      } else {
        throw new Error("Registration failed");
      }
    } catch (error) {
      alert("You are registered, log in instead.");
    }
  };

  const handleLoginSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await fetch('https://academianerds.com/order/client/signin', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(loginData)
      });

      if (response.ok) {
        // Handle successful login
        alert("Login successful!");
        // Redirect or do something
      } else {
        setError('Incorrect email or password');
      }
    } catch (error) {
      setError('Something went wrong. Please try again.');
    }
  };

  return (
    <div id="signlogin">
      <div className="rc-orderform__step-flag">
        <h6>3. Sign up/Login</h6>
      </div>
      <hr />

      <ul className="nav nav-tabs text-center row" id="myTab" role="tablist">
        <li className="nav-item col-sm-4">
          <button
            className={`nav-link ${isNewCustomer ? 'active' : ''}`}
            onClick={() => setIsNewCustomer(true)}
          >
            New Customer
          </button>
        </li>
        <li className="nav-item col-sm-4">
          <button
            className={`nav-link ${!isNewCustomer ? 'active' : ''}`}
            onClick={() => setIsNewCustomer(false)}
          >
            Returning Customer
          </button>
        </li>
      </ul>

      <div className="tab-content" id="myTabContent">
        {isNewCustomer ? (
          <div className="tab-pane fade show active" role="tabpanel">
            <form onSubmit={handleRegisterSubmit}>
              <div className="form-group row">
                <label className="col-sm-3 col-form-label text-muted">Email address</label>
                <div className="col-sm-9">
                  <input
                    type="email"
                    className="form-control"
                    placeholder="your email"
                    name="client_email"
                    required
                    value={registerData.client_email}
                    onChange={handleRegisterChange}
                  />
                </div>
              </div>

              <div className="form-group row">
                <label className="col-sm-3 col-form-label text-muted">Full Name</label>
                <div className="col-sm-9">
                  <input
                    type="text"
                    name="client_name"
                    className="form-control"
                    required
                    value={registerData.client_name}
                    onChange={handleRegisterChange}
                  />
                </div>
              </div>

              <div className="form-group row">
                <label className="col-sm-3 col-form-label text-muted">Password</label>
                <div className="col-sm-9">
                  <input
                    type="password"
                    name="client_pass"
                    className="form-control"
                    placeholder="Password"
                    required
                    value={registerData.client_pass}
                    onChange={handleRegisterChange}
                  />
                </div>
              </div>

              <div className="form-group row">
                <label className="col-sm-3 col-form-label text-muted">Phone</label>
                <div className="col-sm-9">
                  <div className="col-sm-12 row">
                    <select
                      name="client_country"
                      className="form-control bg-warning col-sm-4 custom-select border-default"
                      value={registerData.client_country}
                      onChange={handleRegisterChange}
                    >
                      <option value="United States#1"> United States +1</option>
                      <option value="AFGHANISTAN#93">Afghanistan +93</option>
                      <option value="ALBANIA#355">Albania +355</option>
                      <option value="ALGERIA#213">Algeria +213</option>
                      <option value="ZAMBIA#260">Zambia +260</option>
                      <option value="ZIMBABWE#263">Zimbabwe +263</option>
                    </select>
                    <input
                      type="tel"
                      name="client_phone"
                      className="col-sm-8 form-control"
                      placeholder="(eg +1 201-555-5555)"
                      required
                      value={registerData.client_phone}
                      onChange={handleRegisterChange}
                    />
                  </div>
                </div>
              </div>

              <div className="form-group row">
                <div className="col-sm-9 offset-sm-3">
                  <div className="form-check">
                    <input
                      className="form-check-input"
                      type="checkbox"
                      required
                      defaultChecked
                    />
                    <label className="form-check-label col-sm-12 text-left">
                      I agree to receive discount coupons, exclusive offers, and the latest news by email, SMS, phone, and other electronic means
                    </label>
                  </div>
                  <div className="form-check">
                    <input
                      className="form-check-input"
                      type="checkbox"
                      required
                      defaultChecked
                    />
                    <label className="form-check-label col-sm-12 text-left">
                      I agree to the <a href="https://premiumsassignments.com/terms-and-conditions/">Terms and conditions</a>
                    </label>
                  </div>
                </div>
              </div>

              <div className="col-sm-7 mx-auto">
                <button type="submit" className="btn col-sm-12 btn-warning">Continue</button>
              </div>
            </form>
          </div>
        ) : (
          <div className="tab-pane fade" role="tabpanel">
            <form onSubmit={handleLoginSubmit}>
              <div className="form-group row">
                <label className="col-sm-3 col-form-label text-muted">Email</label>
                <div className="col-sm-9">
                  <input
                    type="email"
                    name="client_email"
                    className="form-control"
                    placeholder="Email"
                    required
                    value={loginData.client_email}
                    onChange={handleLoginChange}
                  />
                </div>
              </div>
              <div className="form-group row">
                <label className="col-sm-3 col-form-label text-muted">Password</label>
                <div className="col-sm-9">
                  <input
                    type="password"
                    name="client_pass"
                    className="form-control"
                    placeholder="Password"
                    required
                    value={loginData.client_pass}
                    onChange={handleLoginChange}
                  />
                  <small><a href="https://academianerds.com/order/user/resetpass">Forgot Password</a></small>
                </div>
              </div>
              <div className="form-group row">
                <div className="col-sm-7 mx-auto">
                  <button type="submit" className="btn col-sm-12 btn-warning">Sign in</button>
                </div>
              </div>
            </form>
            {error && <div className="alert alert-danger">{error}</div>}
          </div>
        )}
      </div>
    </div>
  );
};

export default SignInSignUp;
